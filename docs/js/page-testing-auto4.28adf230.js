(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["page-testing-auto4"],{"291e":function(t,n){},"2fdb":function(t,n,e){"use strict";var a=e("5ca1"),s=e("d2c8"),i="includes";a(a.P+a.F*e("5147")(i),"String",{includes:function(t){return!!~s(this,t,i).indexOf(t,arguments.length>1?arguments[1]:void 0)}})},3846:function(t,n,e){e("9e1e")&&"g"!=/./g.flags&&e("86cc").f(RegExp.prototype,"flags",{configurable:!0,get:e("0bfb")})},5147:function(t,n,e){var a=e("2b4c")("match");t.exports=function(t){var n=/./;try{"/./"[t](n)}catch(e){try{return n[a]=!1,!"/./"[t](n)}catch(s){}}return!0}},6762:function(t,n,e){"use strict";var a=e("5ca1"),s=e("c366")(!0);a(a.P,"Array",{includes:function(t){return s(this,t,arguments.length>1?arguments[1]:void 0)}}),e("9c6c")("includes")},"6b54":function(t,n,e){"use strict";e("3846");var a=e("cb7c"),s=e("0bfb"),i=e("9e1e"),o="toString",l=/./[o],r=function(t){e("2aba")(RegExp.prototype,o,t,!0)};e("79e5")((function(){return"/a/b"!=l.call({source:"a",flags:"b"})}))?r((function(){var t=a(this);return"/".concat(t.source,"/","flags"in t?t.flags:!i&&t instanceof RegExp?s.call(t):void 0)})):l.name!=o&&r((function(){return l.call(this)}))},beb0:function(t,n){},c9ad:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",[e("br"),e("h2",{staticClass:"text-center font-bold text-2xl"},[t._v("SOCKET IO")]),e("hr",{staticClass:"style13"}),e("div",{staticClass:"text-center"}),e("p",{staticClass:"text-center font-bold"},[t._v("\n      BACKEND SEKARANG\n      "),e("br"),e("span",{style:{color:"php"==t.backend?"red":"blue"}},[t._v(t._s(t.backend))]),e("br"),t._v("\n      DATABASE SEKARANG "+t._s("php"==t.backend?"MySQL":"mongoDB")+"\n    ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary",attrs:{type:"button"},on:{click:function(n){t.createSendiri=!t.createSendiri}}},[t._v("Buat Table Sendiri")]),t.createSendiri?e("div",[e("div",{staticClass:"container flex flex-wrap mx-auto px-4"},[e("div",{staticClass:"w-full sm:w-1/4"},[e("div",{staticClass:"text-right"},[t.tables.length>1?e("span",{staticClass:"btns btns-md cursor-pointer bg-red-dark text-white p-2",on:{click:function(n){t.tables.pop(),t.tablenya.pop()}}},[t._v("kurang")]):t._e(),e("span",{staticClass:"btns btns-md cursor-pointer bg-green text-black p-2",on:{click:function(n){return t.tables.push(1)}}},[t._v("tambah")])])])]),e("br"),t._l(t.tables,(function(n,a){return e("div",{key:a+"tables",staticClass:"container flex flex-wrap mx-auto px-4"},[e("div",{staticClass:"w-full sm:w-1/2"},[e("div",{staticClass:"mb-4"},[e("label",{staticClass:"block text-grey-darker text-sm font-bold mb-2"},[t._v("\n              tables :\n              "),e("input",{directives:[{name:"model",rawName:"v-model",value:t.tablenya[a],expression:"tablenya[index]"}],staticClass:"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",attrs:{type:"text",placeholder:"nama tables"},domProps:{value:t.tablenya[a]},on:{keypress:function(n){return!n.type.indexOf("key")&&t._k(n.keyCode,"enter",13,n.key,"Enter")?null:t.tables.push(1)},input:function(n){n.target.composing||t.$set(t.tablenya,a,n.target.value)}}})])])])])})),e("button",{staticClass:"btn btn-sm btn-info",attrs:{type:"button"},on:{click:t.buat}},[t._v("Ambil Tabel")])],2):t._e(),e("div",{staticClass:"text-center"},[e("button",{staticClass:"btn btn-sm btn-primary",attrs:{type:"button"},on:{click:function(n){t.checkWith=!t.checkWith}}},[t._v(t._s(t.checkWith?"Dengan Check ON(TRUE)":"Tanpa Check ON(FALSE)"))]),e("div",{staticClass:"sm-form"},[e("label",{attrs:{for:"links"}},[t._v("Your links")]),e("input",{directives:[{name:"model",rawName:"v-model",value:t.links,expression:"links"}],staticClass:"form-control form-control-sm",attrs:{type:"text",id:"links",name:"links",placeholder:"links"},domProps:{value:t.links},on:{input:function(n){n.target.composing||(t.links=n.target.value)}}})])]),e("div",{staticClass:"container flex flex-wrap mx-auto px-4"},[e("div",{staticClass:"w-full sm:w-1/2 text-center"},[e("p",{staticClass:"text-center font-bold"},[t._v("FORM LESS")]),e("br"),t._l(t.datanya,(function(n,a){return e("span",{key:a+"formless"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.formless,expression:"formless"}],attrs:{type:"checkbox",id:n+"1"},domProps:{value:n,checked:Array.isArray(t.formless)?t._i(t.formless,n)>-1:t.formless},on:{change:function(e){var a=t.formless,s=e.target,i=!!s.checked;if(Array.isArray(a)){var o=n,l=t._i(a,o);s.checked?l<0&&(t.formless=a.concat([o])):l>-1&&(t.formless=a.slice(0,l).concat(a.slice(l+1)))}else t.formless=i}}}),e("label",{attrs:{for:n+1}},[t._v(t._s(n))]),t._v("  \n        ")])}))],2),e("div",{staticClass:"w-full sm:w-1/2 text-center"},[e("p",{staticClass:"text-center font-bold"},[t._v("TABLE LESS")]),e("br"),t._l(t.datanya,(function(n,a){return e("span",{key:a+"tableless"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.tableless,expression:"tableless"}],attrs:{type:"checkbox",id:n+"2"},domProps:{value:n,checked:Array.isArray(t.tableless)?t._i(t.tableless,n)>-1:t.tableless},on:{change:function(e){var a=t.tableless,s=e.target,i=!!s.checked;if(Array.isArray(a)){var o=n,l=t._i(a,o);s.checked?l<0&&(t.tableless=a.concat([o])):l>-1&&(t.tableless=a.slice(0,l).concat(a.slice(l+1)))}else t.tableless=i}}}),e("label",{attrs:{for:n+2}},[t._v(t._s(n))]),t._v("  \n        ")])}))],2)]),e("div",{staticClass:"container"},[e("div",{staticClass:"row"},[e("div",{staticClass:"col-sm-12"},[e("div",{staticClass:"row"},t._l(t.datanya,(function(n,a){return e("div",{key:a+"data",staticClass:"col-sm-3"},[t._v("\n              "+t._s(n)+" :\n              "),e("select",{directives:[{name:"model",rawName:"v-model",value:t.selected[a],expression:"selected[index]"}],staticClass:"form-control",on:{change:function(n){var e=Array.prototype.filter.call(n.target.options,(function(t){return t.selected})).map((function(t){var n="_value"in t?t._value:t.value;return n}));t.$set(t.selected,a,n.target.multiple?e:e[0])}}},[e("option",{attrs:{selected:"selected"}},[t._v("text")]),e("option",[t._v("number")]),e("option",[t._v("date")]),e("option",[t._v("date2")]),e("option",[t._v("jam")]),e("option",[t._v("switch")]),e("option",[t._v("tag")]),e("option",[t._v("email")]),e("option",[t._v("password")]),e("option",[t._v("file")]),e("option",[t._v("textarea")]),e("option",[t._v("select")]),e("option",[t._v("radio")]),e("option",[t._v("checkbox")])])])})),0),e("br"),e("div",{staticClass:"container-fluid"},[e("div",{staticClass:"row"},[e("div",{staticClass:"col-sm-6"},[e("button",{staticClass:"btn btn-sm btn-warning btn-block shadow-md",attrs:{type:"button"},on:{click:t.getData}},[t._v("get data")])]),e("div",{staticClass:"col-sm-6"},[e("button",{staticClass:"btn btn-sm btn-outline-primary btn-block shadow-md",attrs:{type:"button"},on:{click:t.formula}},[t._v("get formula")])]),e("div",{staticClass:"col-sm-12"},[e("select",{directives:[{name:"model",rawName:"v-model",value:t.vdata.key,expression:"vdata.key"}],staticClass:"form-control",on:{change:function(n){var e=Array.prototype.filter.call(n.target.options,(function(t){return t.selected})).map((function(t){var n="_value"in t?t._value:t.value;return n}));t.$set(t.vdata,"key",n.target.multiple?e:e[0])}}},t._l(t.keys,(function(n,a){return e("option",{key:a+"keys"},[t._v(t._s(n))])})),0)])])]),e("br"),e("br"),e("br"),e("br"),e("br"),e("hr",{staticClass:"style2"}),e("br"),e("div",{staticClass:"container-fluid"},[e("div",{staticClass:"row"},[e("div",{staticClass:"col-sm-4"},[t._v("\n                Input HTML\n                "),e("button",{staticClass:"btn btn-sm btn-outline-primary",attrs:{type:"button"},on:{click:function(n){return t.copy("#textarea1")}}},[t._v("copy")]),e("br"),e("textarea",{directives:[{name:"model",rawName:"v-model",value:t.kalimat,expression:"kalimat"}],staticStyle:{border:"1px solid black"},attrs:{name:"",id:"textarea1",cols:"30",rows:"10"},domProps:{value:t.kalimat},on:{input:function(n){n.target.composing||(t.kalimat=n.target.value)}}})]),e("div",{staticClass:"col-sm-4"},[t._v("\n                FULL HTMLS\n                "),e("button",{staticClass:"btn btn-sm btn-outline-primary",attrs:{type:"button"},on:{click:function(n){return t.copy("#textarea4")}}},[t._v("copy")]),e("br"),e("textarea",{directives:[{name:"model",rawName:"v-model",value:t.kalimat2,expression:"kalimat2"}],staticStyle:{border:"1px solid black"},attrs:{name:"",id:"textarea4",cols:"30",rows:"10"},domProps:{value:t.kalimat2},on:{input:function(n){n.target.composing||(t.kalimat2=n.target.value)}}})]),e("div",{staticClass:"col-sm-4"},[t._v("\n                print page\n                "),e("button",{staticClass:"btn btn-sm btn-outline-primary",attrs:{type:"button"},on:{click:function(n){return t.copy("#textarea6")}}},[t._v("copy")]),e("br"),e("textarea",{directives:[{name:"model",rawName:"v-model",value:t.kalimat3,expression:"kalimat3"}],staticStyle:{border:"1px solid black"},attrs:{name:"",id:"textarea6",cols:"30",rows:"10"},domProps:{value:t.kalimat3},on:{input:function(n){n.target.composing||(t.kalimat3=n.target.value)}}})]),e("div",{staticClass:"col-sm-4"},[t._v("\n                Mongoose schema\n                "),e("button",{staticClass:"btn btn-sm btn-outline-primary",attrs:{type:"button"},on:{click:function(n){return t.copy("#textarea4")}}},[t._v("copy")]),e("br"),e("textarea",{directives:[{name:"model",rawName:"v-model",value:t.schema,expression:"schema"}],staticStyle:{border:"1px solid black"},attrs:{name:"",id:"textarea4",cols:"30",rows:"10"},domProps:{value:t.schema},on:{input:function(n){n.target.composing||(t.schema=n.target.value)}}})]),e("div",{staticClass:"col-sm-4"},[t._v("\n                fprm only\n                "),e("button",{staticClass:"btn btn-sm btn-outline-primary",attrs:{type:"button"},on:{click:function(n){return t.copy("#textarea9")}}},[t._v("copy")]),e("br"),e("textarea",{directives:[{name:"model",rawName:"v-model",value:t.kalimat4,expression:"kalimat4"}],staticStyle:{border:"1px solid black"},attrs:{name:"",id:"textarea9",cols:"30",rows:"10"},domProps:{value:t.kalimat4},on:{input:function(n){n.target.composing||(t.kalimat4=n.target.value)}}})])])]),e("br"),e("br"),e("br"),e("button",{staticClass:"btn btn-sm btn-danger",attrs:{type:"button"},on:{click:function(n){t.mysqlShow=!t.mysqlShow}}},[t._v("Mysql Show")]),t._v("   \n          "),t.mysqlShow?[e("h3",{staticClass:"text-center font-times"},[t._v("NOTE: UNTUK MENGGUNAKAN UPDATE DAN DELETE BAGIAN LINK HARUS DIUPDATE PADA BAGIAN (.....)")]),e("hr",{staticClass:"style3"}),e("h2",{staticClass:"text-center"},[t._v("MYSQL")]),e("p",{staticClass:"text-center font-bold uppercase"},[t._v("AUTO")]),e("pre",[t._v("            "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v("\n            "+t._s(t.nodeMysqlSelectauto))]),e("p",{staticClass:"text-center font-bold uppercase"},[t._v("SELECT")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMysqlSelect))]),e("p",{staticClass:"text-center font-bold uppercase"},[t._v("INSERT")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.sqlInsert))]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMysql))]),e("h2",{staticClass:"text-center"},[t._v("versi auto")]),e("pre",[t._v("           "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(" "+t._s(t.ifk)+"\n          ")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMysqls))]),e("h2",{staticClass:"text-center"},[t._v("server")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMysqlInsert))]),e("p",{staticClass:"text-center font-bold uppercase"},[t._v("UPDATE")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.sqlUpdate))]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMysql2))]),e("h2",{staticClass:"text-center"},[t._v("versi auto")]),e("pre",[t._v("           "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(" "+t._s(t.ifk)+"\n          ")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMysqls2))]),e("h2",{staticClass:"text-center"},[t._v("server")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMysqlUpdate))]),e("p",{staticClass:"text-center font-bold uppercase"},[t._v("DELETE")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.sqlDelete))]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMysql2))]),e("h2",{staticClass:"text-center"},[t._v("versi auto")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMysqls3))]),e("h2",{staticClass:"text-center"},[t._v("server")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMysqlDelete))])]:t._e(),e("button",{staticClass:"btn btn-sm btn-info",attrs:{type:"button"},on:{click:function(n){t.mongoShow=!t.mongoShow}}},[t._v("Mongo Show")]),t._v("  \n          "),t.mongoShow?[e("hr",{staticClass:"style13"}),e("h2",{staticClass:"text-center"},[t._v("MONGODB")]),e("p",{staticClass:"text-center font-bold uppercase"},[t._v("AUTO")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMongoSelectauto))]),e("p",{staticClass:"text-center font-bold uppercase"},[t._v("SELECT")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMongoSelect))]),e("p",{staticClass:"text-center font-bold uppercase"},[t._v("INSERT")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMongo))]),e("h2",{staticClass:"text-center"},[t._v("server")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMongoInsert))]),e("p",{staticClass:"text-center font-bold uppercase"},[t._v("UPDATE")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMongo2))]),e("h2",{staticClass:"text-center"},[t._v("server")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMongoUpdate))]),e("p",{staticClass:"text-center font-bold uppercase"},[t._v("DELETE")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMongo3))]),e("h2",{staticClass:"text-center"},[t._v("server")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.nodeMongoDelete))])]:t._e(),e("button",{staticClass:"btn btn-sm btn-dark",attrs:{type:"button"},on:{click:function(n){t.nedbShow=!t.nedbShow}}},[t._v("Socket IO Show")]),t.nedbShow?[e("hr",{staticClass:"style13"}),e("h2",{staticClass:"text-center font-bold font-times"},[t._v("SOCKET IO")]),e("pre",[t._v("                       "),e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{height:"20px",width:"50px"},attrs:{type:"button"},on:{click:function(n){return t.cop(n)}}}),t._v(t._s(t.sockets))])]:t._e()],2)])]),e("div",{domProps:{innerHTML:t._s(t.kalimat)}})])},s=[],i=(e("6b54"),e("6762"),e("2fdb"),e("ac6a"),e("456d"),e("bc3a"),e("cc98")),o={data:function(){return{tables:[1],tablenya:[],createSendiri:!1,sockets:"",formless:[],tableless:[],selected:[],datanya:[],backend:"socket",kalimat:"",kalimat2:"",kalimat3:"",kalimat4:"",mongoSelects:"",mongoInserts:"",mongoUpdates:"",mongoRemoves:"",links:"this.$store.state.database",schema:"",sqlInsert:"",sqlUpdate:"",checkWith:!1,databaseWith:!1,mongoShow:!1,mysqlShow:!1,nedbShow:!1,sqlDelete:"",nodeMysql:"",nodeMysqls:"",nodeMysql2:"",nodeMysqls3:"",nodeMysqls2:"",nodeMongo:"",nodeMongo2:"",nodeMongo3:"",nodeMysqlInsert:"",nodeMysqlUpdate:"",nodeMysqlDelete:"",nodeMysqlSelect:"",nodeMysqlSelectauto:"",nodeMongoSelect:"",nodeMongoInsert:"",nodeMongoUpdate:"",nodeMongoDelete:"",nodeMongoSelectauto:"",ifk:"",gambars:"Gambars",nedb:"",key:"",table:"bamban_tbpindah",vdata:{id:"1",table:"tbuser"}}},computed:{keys:function(){return this.datanya}},methods:{buat:function(){this.datanya=this.tablenya;for(var t=this.datanya.length,n=0;n<t;n++)this.selected[n]="text"},cop:function(t){console.dir(t.target.parentElement);var n=t.target.parentElement,e=n.textContent,a=document.createElement("textarea");a.textContent=e,document.body.append(a),a.select(),document.execCommand("copy")},copy:function(t){var n=this.$el.querySelector(t);n.select(),document.execCommand("copy")},getData:function(){var t={nama:"taufik",text:"isi pesan",room:"123",tujuan:"user",warning:"-",dibaca:"false",status:1,id:i()};this.datanya=Object.keys(t);for(var n=this.datanya.length,e=0;e<n;e++)this.selected[e]="text"},formula:function(){var t=this,n=this,e=(this.datanya.length,"("),a="Insert into "+this.vdata.table+" (",s="Insert into "+this.vdata.table+" (",i="UPDATE "+this.vdata.table+" SET ",o="UPDATE "+this.vdata.table+" SET ",l="DELETE FROM "+this.vdata.table+" WHERE ",r="DELETE FROM "+this.vdata.table+" WHERE ",c="let ".concat(this.vdata.table,"Schema = new mongoose.Schema({"),d='\x3c!-- FORM --\x3e\n       <div class="tips">\n      <button type="button" @click="print1" class="btn btn-sm btn-outline-info">\n        <span class="typcn typcn-printer"></span>\n      </button>\n      <span class="tipstextB">print!</span>\n    </div>\n    <form\n      action\n      @submit.prevent="aksi == \'insert\' ? insert() : aksi == \'update\' ? update() : remove() "\n    >\n      \x3c!-- FORM --\x3e',h=" let fd = new FormData();\n      let arr = [\n      ",p=" let fd = new FormData();\n      ",m=" let fd = new FormData();\n      let arr = [\n      ",u=" let fd = new FormData();\n      ",b=" let fd = new FormData();\n      ",f=[],y="(";this.datanya.forEach((function(l,r){n.vdata.key==l||(a+="".concat(l,","),s+="".concat(l,","),i+="".concat(l,"=?,"),o+="".concat(l,"='${this.vdata.").concat(l,"}',"),e+="?,",y+="'${this.vdata.".concat(l,"}',"),h+="this.vdata.".concat(l,","),m+="this.vdata.".concat(l,",")),f.push(l),c+="".concat(l,': {\n          type: String,\n          default: "null"\n        },'),t.formless.includes(l)?console.log("less",l):"text"==t.selected[r]?(console.log("ini text",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                <div class="sm-form">\n                  <input\n                    type="text"\n                    placeholder="').concat(l,'_"\n                    id="').concat(l,'"\n                    name="').concat(l,'"\n                    class="form-control form-control-sm"\n                    v-model="vdata.').concat(l,'"\n                    pattern="[a-zA-Z0-9\\s]+" minlength="0" maxlength="30"\n                    oninvalid="this.setCustomValidity(\'Harus diisi dan Maksimal 30 !\')"\n              oninput="this.setCustomValidity(\'\')"\n              ').concat("_id"==l||"id"==l?"disabled":"","\n                  >\n                </div>\n              </td>\n            </tr>\n            ")):"number"==t.selected[r]?(console.log("ini number",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                <div class="sm-form">\n                  <input\n                    type="number"\n                    placeholder="').concat(l,'_"\n                    id="').concat(l,'"\n                    name="').concat(l,'"\n                    class="form-control form-control-sm"\n                    v-model="vdata.').concat(l,'"\n                    value="0" min="1" max="100"\n                    oninvalid="this.setCustomValidity(\'Harus diisi dan Number valie 1 - 100 !\')"\n              oninput="this.setCustomValidity(\'\')"\n                  >\n                </div>\n              </td>\n            </tr>\n            ')):"date"==t.selected[r]?(console.log("ini date",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                <div class="sm-form">\n                  <input\n                    type="date"\n                    placeholder="').concat(l,'_"\n                    id="').concat(l,'"\n                    name="').concat(l,'"\n                    class="form-control form-control-sm"\n                    v-model="vdata.').concat(l,'"\n                    oninvalid="this.setCustomValidity(\'Harus diisi  !\')"\n              oninput="this.setCustomValidity(\'\')"\n                  >\n                </div>\n              </td>\n            </tr>\n            ')):"date2"==t.selected[r]?(console.log("ini date2",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n    <b-field label="">\n      <b-datepicker placeholder="Click to select..." icon="calendar-today" v-model="vdata.').concat(l,'"></b-datepicker>\n    </b-field>\n              </td>\n            </tr>\n            ')):"jam"==t.selected[r]?(console.log("ini jam",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n   <b-field label="Select timepicker">\n      <b-timepicker\n        placeholder="Type or select a date..."\n        icon="clock"\n        v-model="vdata.').concat(l,'"\n        editable\n      ></b-timepicker>\n    </b-field>\n              </td>\n            </tr>\n            ')):"switch"==t.selected[r]?(console.log("ini jam",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n   <div class="field">\n      <b-switch v-model="vdata.').concat(l,'" true-value="Yes" false-value="No">{{ vdata.').concat(l," }}</b-switch>\n    </div>\n              </td>\n            </tr>\n            "),"".concat(l,':"Yes",')):"tag"==t.selected[r]?(console.log("ini tag",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n  <b-field label="Add some tags">\n      <b-taginput v-model="vdata.').concat(l,'" ellipsis icon="label" placeholder="Add a tag"></b-taginput>\n    </b-field>\n              </td>\n            </tr>\n            '),"".concat(l,":[],")):"file"==t.selected[r]?(console.log("ini file",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                <div class="sm-form">\n                  <input\n                    type="text"\n                    placeholder="').concat(l,'_"\n                    id="').concat(l,'"\n                    name="').concat(l,'"\n                    class="form-control form-control-sm"\n                    v-model="vdata.').concat(l,'"\n                    disabled\n                  >\n                  <upload @upload="go" @link="linknya" />\n                </div>\n              </td>\n            </tr>\n            '),t.gambars=l):"email"==t.selected[r]?(console.log("ini email",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                <div class="sm-form">\n                  <input\n                    type="email"\n                    placeholder="').concat(l,'_"\n                    id="').concat(l,'"\n                    name="').concat(l,'"\n                    class="form-control form-control-sm"\n                    v-model="vdata.').concat(l,'"\n                    required\n                    oninvalid="this.setCustomValidity(\'Harus dalam format email !\')"\n              oninput="this.setCustomValidity(\'\')"\n                  >\n                </div>\n              </td>\n            </tr>\n            ')):"password"==t.selected[r]?(console.log("ini password",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                <div class="sm-form">\n                  <input\n                    type="password"\n                    placeholder="').concat(l,'_"\n                    id="').concat(l,'"\n                    name="').concat(l,'"\n                    class="form-control form-control-sm"\n                    v-model="vdata.').concat(l,'"\n                    required\n                     pattern="[a-zA-Z0-9]+" minlength="0" maxlength="30"\n                    oninvalid="this.setCustomValidity(\'Harus diisi dan tidak boleh menggunakan karakter special!\')"\n              oninput="this.setCustomValidity(\'\')"\n                  >\n                </div>\n              </td>\n            </tr>\n            ')):"file"==t.selected[r]?console.log("ini file",r):"textarea"==t.selected[r]?(console.log("ini textarea",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                 <div class="sm-form">\n        <label for="').concat(l,'">Your ').concat(l,'</label>\n        <textarea type="text" id="').concat(l,'" name="').concat(l,'"  pattern="[a-zA-Z0-9\\s]+" minlength="0" maxlength="200" rows="2" placeholder="').concat(l,'" class="form-control md-textarea" v-model="vdata.').concat(l,'"\n        oninvalid="this.setCustomValidity(\'Harus diisi dan Maksimal 200 Karakter !\')"\n              oninput="this.setCustomValidity(\'\')"\n        ></textarea>\n    </div>\n              </td>\n            </tr>\n            ')):"select"==t.selected[r]?(console.log("ini select",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                 <select class="form-control" v-model="vdata.').concat(l,'">\n                <option selected="true">text</option>\n                <option>number</option>\n                <option>date</option>\n               </select>\n              </td>\n            </tr>\n            ')):"radio"==t.selected[r]?(console.log("ini radio",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                 <input type="radio" id="one" name="').concat(l,'" value="L" v-model="vdata.').concat(l,'">\n                  <label for="one">L</label>\n                  <br>\n                  <input type="radio" id="one" name="').concat(l,'" value="P" v-model="vdata.').concat(l,'">\n                  <label for="two">P</label>\n              </td>\n            </tr>\n            <br/>\n            ')):"checkbox"==t.selected[r]&&(console.log("ini checkbox",r),d+=" \n          <tr>\n              <td>".concat(l,'_</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                <input type="checkbox" id="no1" value="no1"   oninvalid="this.setCustomValidity(\'Harus dipilih salah satu !\')"\n              oninput="this.setCustomValidity(\'\')" v-model="vdata.').concat(l,'">\n                <label for="no1">no1</label>\n                <input type="checkbox" id="no2" value="no2"   oninvalid="this.setCustomValidity(\'Harus dipilih salah satu !\')"\n              oninput="this.setCustomValidity(\'\')" v-model="vdata.').concat(l,'">\n                <label for="no2">no2</label>\n                <input type="checkbox" id="no3" value="no3"   oninvalid="this.setCustomValidity(\'Harus dipilih salah satu !\')"\n              oninput="this.setCustomValidity(\'\')" v-model="vdata.').concat(l,'">\n                <label for="no3">no3</label>\n              </td>\n            </tr>\n            <br/>\n            '),"".concat(l,":[],"))})),//! #END#
a=a.substring(0,a.length-1)+") VALUES "+e.substring(0,e.length-1)+")",s=s.substring(0,s.length-1)+") VALUES "+y.substring(0,y.length-1)+")",i=i.substring(0,i.length-1)+" Where "+this.vdata.key+" = ${req.body.id}",o=o.substring(0,o.length-1)+" Where "+this.vdata.key+" = '${this.vdata.".concat(this.vdata.key,"}'"),l=l+" "+this.vdata.key+" =  ${req.body.id}",r=r+" "+this.vdata.key+" =  '${this.vdata.".concat(this.vdata.key,"}'"),h=h.substring(0,h.length-1)+'\n      ];\n      fd.append("data", arr);\n      this.$nuxt.$emit("busy", true);\n      axios\n        .post('.concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mysql/insert/').concat(this.vdata.table,'", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          this.$nuxt.$emit("busy", false);\n          console.log(res);\n        });\n    }'),p+='\n      fd.append("data", `'.concat(s,"`);\n      ").concat("this.$store.state.database"==this.links?'this.$nuxt.$emit("busy", true);':"","\n      axios\n        .post(").concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mysql/auto').concat("php"==this.backend?".php":"",'", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          ').concat("this.$store.state.database"==this.links?'this.$nuxt.$emit("busy", false);':"","\n          console.log(res);\n          alert('Simpan Data Berhasil!')\n          this.refreshData()\n        }).catch(err => {\n            ").concat("this.$store.state.database"==this.links?'this.$nuxt.$emit("busy", false);':"","\n            this.refreshData()\n          });\n    "),u+='\n      fd.append("data", `'.concat(o,"`);\n      ").concat("this.$store.state.database"==this.links?'this.$nuxt.$emit("busy", true);':"","\n      axios\n        .post(").concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mysql/auto').concat("php"==this.backend?".php":"",'", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          ').concat("this.$store.state.database"==this.links?'this.$nuxt.$emit("busy", false);':"","\n          console.log(res);\n          alert('Update Data Berhasil!')\n          this.refreshData()\n        }).catch(err => {\n           ").concat("this.$store.state.database"==this.links?'this.$nuxt.$emit("busy", false);':"","\n            this.refreshData()\n          });\n    "),b+='\n      fd.append("data", `'.concat(r,"`);\n      if (confirm('Yakin dihapus?')) {\n      ").concat("this.$store.state.database"==this.links?'this.$nuxt.$emit("busy", true);':"","\n      axios\n        .post(").concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mysql/auto').concat("php"==this.backend?".php":"",'", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n         ').concat("this.$store.state.database"==this.links?'this.$nuxt.$emit("busy", false);':"","\n          console.log(res);\n          alert('Delete Data Berhasil!')\n          let keys = Object.keys(this.vdata)\n          keys.forEach(key => {\n            this.vdata[key] = ''\n          })\n          this.refreshData()\n        }).catch(err => {\n            ").concat("this.$store.state.database"==this.links?'this.$nuxt.$emit("busy", false);':"","\n            let keys = Object.keys(this.vdata)\n          keys.forEach(key => {\n            this.vdata[key] = ''\n          })\n            this.refreshData()\n          });\n          }\n    "),m=m.substring(0,m.length-1)+'\n      ];\n      //! ganti pada bagian .... menjadi fungsi delete atau update\n      fd.append("data", arr);\n      fd.append("id", this.vdata.'.concat(this.vdata.key,');\n      this.$nuxt.$emit("busy", true);\n      axios\n        .post(').concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mysql/..../').concat(this.vdata.table,'", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          this.$nuxt.$emit("busy", false);\n          console.log(res);\n        });\n    }'),this.nodeMysqlInsert=this.nodeMysqlInsert+"\n     app.post(`/api/mysql/insert/".concat(this.vdata.table,"`, multipart, (req, res, next) => {\n    mysql.query(\n      `").concat(a,'`,\n      req.body.data.split(","),\n      function(err, result, field) {\n        res.json({\n          data: result\n        });\n      }\n    );\n  });'),this.nodeMysqlUpdate=this.nodeMysqlUpdate+"\n     app.post(`/api/mysql/update/".concat(this.vdata.table,"`, multipart, (req, res, next) => {\n    mysql.query(\n      `").concat(i,'`,\n      req.body.data.split(","),\n      function(err, result, field) {\n        res.json({\n          data: result\n        });\n      }\n    );\n  });'),this.nodeMysqlDelete=this.nodeMysqlDelete+"\n     app.post(`/api/mysql/delete/".concat(this.vdata.table,"`, multipart, (req, res, next) => {\n    mysql.query(\n      `").concat(l,'`,\n      req.body.data.split(","),\n      function(err, result, field) {\n        res.json({\n          data: result\n        });\n      }\n    );\n  });'),this.nodeMysqlSelect=this.nodeMysqlSelect+"\n     app.post(`/api/mysql/select/".concat(this.vdata.table,"`, multipart, (req, res, next) => {\n    mysql.query(\n      `Select * from ").concat(this.vdata.table,"`,\n      function(err, result, field) {\n        res.json({\n          data: result\n        });\n      }\n    );\n  });"),this.nodeMongoSelect=this.nodeMongoSelect+"\n     app.post(`/api/mongo/select/".concat(this.vdata.table,'`, multipart, (req, res, next) => {\n       schemas["').concat(this.vdata.table,'"].find({}, function(err, data) {\n      console.log(data);\n      if (err) console.log(err);\n      res.json(data);\n    });\n    );\n  });'),this.nodeMysqlSelectauto=this.nodeMysqlSelectauto+'\n     let fd = new FormData();\n      fd.append("data", "select * from '.concat(this.vdata.table,'"); //if empty = *\n      axios\n        .post(').concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mysql/auto').concat("php"==this.backend?".php":"",'", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          console.log(res);\n        });'),this.nodeMongoSelectauto=this.nodeMongoSelectauto+'\n     let fd = new FormData();\n      fd.append("table", "'.concat(this.vdata.table,'");\n      fd.append("select", "').concat(f.join(),'"); //if empty = *\n      axios\n        .post(').concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mongo/').concat(this.vdata.table,'", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          console.log(res);\n        });'),this.mongoSelects=this.mongoSelects+'\n     let fd = new FormData();\n      fd.append("table", "'.concat(this.vdata.table,'");\n      fd.append("aksi", "select");\n      fd.append("select", "').concat(f.join(),'"); //if empty = *\n      axios\n        .post(').concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mongo/auto", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          console.log(res);\n        });'),this.nodeMongo=this.nodeMongo+'let fd = new FormData();\n      fd.append("data", JSON.stringify(this.vdata));\n      this.$nuxt.$emit("busy", true);\n      axios\n        .post('.concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mongo/insert/').concat(this.vdata.table,'", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          this.$nuxt.$emit("busy", false);\n          alert(\'data berhasil diinsert!\')\n          console.log(res);\n          let keys = Object.keys(this.vdata)\n          keys.forEach(key => {\n            this.vdata[key] = \'\'\n          })\n          this.refreshData()\n        });'),this.mongoInserts=this.mongoInserts+'let fd = new FormData();\n      fd.append("data", JSON.stringify(this.vdata));\n      fd.append("aksi", "insert");\n      fd.append("table", "'.concat(this.vdata.table,'");\n      this.$nuxt.$emit("busy", true);\n      axios\n        .post(').concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mongo/auto", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          this.$nuxt.$emit("busy", false);\n          alert(\'data berhasil diinsert!\')\n          console.log(res);\n          let keys = Object.keys(this.vdata)\n          keys.forEach(key => {\n            this.vdata[key] = \'\'\n          })\n          this.refreshData()\n        }).catch(err=>{\n          this.$nuxt.$emit("busy", false);\n          console.log(res);\n        });'),this.mongoUpdates=this.mongoUpdates+'let fd = new FormData();\n      fd.append("data", JSON.stringify(this.vdata));\n      fd.append("aksi", "update");\n      fd.append("table", "'.concat(this.vdata.table,'");\n      this.$nuxt.$emit("busy", true);\n      axios\n        .post(').concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mongo/auto", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          this.$nuxt.$emit("busy", false);\n          alert(\'data berhasil diupdate!\')\n          console.log(res);\n          let keys = Object.keys(this.vdata)\n          keys.forEach(key => {\n            this.vdata[key] = \'\'\n          })\n          this.refreshData()\n        }).catch(err=>{\n          this.$nuxt.$emit("busy", false);\n          console.log(res);\n        });'),this.mongoRemoves=this.mongoRemoves+'let fd = new FormData();\n      fd.append("data", JSON.stringify(this.vdata));\n      fd.append("aksi", "remove");\n      fd.append("table", "'.concat(this.vdata.table,'");\n      if (confirm(\'Yakin dihapus?\')) {\n      this.$nuxt.$emit("busy", true);\n      axios\n        .post(').concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mongo/auto", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n          this.$nuxt.$emit("busy", false);\n          console.log(res);\n          alert(\'data berhasil dihapus!\')\n          let keys = Object.keys(this.vdata)\n          keys.forEach(key => {\n            this.vdata[key] = \'\'\n          })\n          this.refreshData()\n        }).catch(err=>{\n          this.$nuxt.$emit("busy", false);\n          console.log(res);\n        });\n        }'),this.nodeMongo2=this.nodeMongo2+'let fd = new FormData();\n      fd.append("data", JSON.stringify(this.vdata));\n      fd.append("id", this.vdata.'.concat(this.vdata.key,')\n      // ! ganti bagian .... menjadi fungsi update atau delete\n      this.$nuxt.$emit("busy", true);\n      axios\n        .post(').concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mongo/update/').concat(this.vdata.table,'", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n           this.$nuxt.$emit("busy", false);\n          alert(\'data berhasil update!\')\n          console.log(res);\n          let keys = Object.keys(this.vdata)\n          keys.forEach(key => {\n            this.vdata[key] = \'\'\n          })\n          this.refreshData()\n        });'),this.nodeMongo3=this.nodeMongo3+'let fd = new FormData();\n      fd.append("data", JSON.stringify(this.vdata));\n      fd.append("id", this.vdata.'.concat(this.vdata.key,")\n      // ! ganti bagian .... menjadi fungsi update atau delete\n      if (confirm('Yakin dihapus?')) {\n      this.$nuxt.$emit(\"busy\", true);\n      axios\n        .post(").concat("this.$store.state.database"==this.links?this.links:'"'.concat(this.links,'"'),'+"/api/mongo/remove/').concat(this.vdata.table,'", fd, {\n          headers: {\n            Authorization: localStorage.getItem("auth._token.local")\n          }\n        })\n        .then(res => {\n           this.$nuxt.$emit("busy", false);\n          alert(\'data berhasil dihapus!\')\n          console.log(res);\n          let keys = Object.keys(this.vdata)\n          keys.forEach(key => {\n            this.vdata[key] = \'\'\n          })\n          this.refreshData()\n        });\n        }'),this.nodeMongoInsert=this.nodeMongoInsert+"\n     app.post(`/api/mongo/insert/".concat(this.vdata.table,'`, multipart, (req, res, next) => {\n    console.log(JSON.parse(req.body.data));\n    schemas["').concat(this.vdata.table,'"].create(JSON.parse(req.body.data), function(err, data) {\n      console.log(data);\n      if (err) console.log(err);\n      res.json(data);\n    });\n  });'),this.nodeMongoUpdate=this.nodeMongoUpdate+"\n     app.post(`/api/mongo/update/".concat(this.vdata.table,'`, multipart, (req, res, next) => {\n    console.log(JSON.parse(req.body.data));\n    schemas["').concat(this.vdata.table,'"].findByIdAndUpdate(req.body.id, JSON.parse(req.body.data), function(err, data) {\n      console.log(data);\n      if (err) console.log(err);\n      res.json(data);\n    });\n  });\n  \n  <<------------------NOTE------------------------\x3e>\n  schemas["').concat(this.vdata.table,'"].findByIdAndUpdate(\n        req.body.id,\n        {\n        set: {\n            stok: data.stok - jumlah\n        }\n  '),this.nodeMongoDelete=this.nodeMongoDelete+"\n     app.post(`/api/mongo/delete/".concat(this.vdata.table,'`, multipart, (req, res, next) => {\n    console.log(JSON.parse(req.body.data));\n    schemas["').concat(this.vdata.table,'"].findByIdAndRemove(req.body.id, function(err, data) {\n      console.log(data);\n      if (err) console.log(err);\n      res.json(data);\n    });\n  });'),console.log("insert",a),console.log("update",i),console.log("update",l);var g="if(";f.forEach((function(t,n){n<f.length-1?g+="this.vdata.".concat(t," && "):g+="this.vdata.".concat(t," "),console.log(n)})),g+="){ this.err = false }else{ this.err=true }",console.log("ifk",g),this.ifk=g,c+="});  \n      let ".concat(this.vdata.table,' = mongoose.model("').concat(this.vdata.table,'", ').concat(this.vdata.table,"Schema);"),this.schema=c,console.log("schema",c),this.sqlDelete=l,this.sqlInsert=a,this.sqlUpdate=i,this.nodeMysql=h,this.nodeMysqls=p,this.nodeMysql2=m,this.nodeMysqls3=b,this.nodeMysqls2=u,d+='\x3c!-- FORM --\x3e\n      \x3c!-- SUBMIT --\x3e\n      <br />\n      <button\n        type="submit"\n        class="btn btn-sm btn-primary ml-2"\n        v-text="aksi == \'insert\' ? \'insert\' : aksi == \'update\' ? \'update\' : \'remove\'"\n      ></button>\n      \x3c!-- SUBMIT --\x3e\n    </form>\n     <hr class="style13" />\n    <button type="button" @click="aksi=\'insert\';clearInput()" class="btn btn-sm btn-danger">insert</button>\n    <button type="button" @click="aksi=\'update\'" class="btn btn-sm btn-danger">update</button>\n    <button type="button" @click="aksi=\'remove\'" class="btn btn-sm btn-danger">remove</button>\n    ';var v="<template>\n  <div>\n    \x3c!-- FORM --\x3e",k="<template>\n  <div>\n    \x3c!-- FORM --\x3e",x="";this.tableless.forEach((function(t,n){x+='"'.concat(t,'",')})),x=x.substring(0,x.length-1),v=v+d+'\n     \x3c!-- <tables :datatable="datanya" :unless="[\'fname\',\'lname\']" /> --\x3e\n    <div style="overflow-x:auto;width:100%;" v-if="ready">\n      \x3c!-- MODAL --\x3e\n      \x3c!-- ======================================================= --\x3e\n      \x3c!-- DATATABLE MULAI DISINI --\x3e\n      \x3c!-- SEARCH INPUT --\x3e\n      <div class="container flex flex-wrap mx-auto px-4 d-print-none">\n        <div class="w-full sm:w-1/3">\n          <div class="input-group mb-2">\n            <div class="input-group-prepend">\n              <div class="input-group-text">\n                <span class="typcn typcn-zoom"></span>\n              </div>\n            </div>\n            <input\n              type="text"\n              class="form-control py-0"\n              id="searchTable"\n              placeholder="Cari Data ... "\n              v-model="search"\n            />\n          </div>\n        </div>\n        \x3c!-- KOSONG --\x3e\n        <div class="w-full sm:w-1/3"></div>\n        \x3c!-- BUTTON LIST --\x3e\n        <div class="w-full sm:w-1/3">\n          <div class="row">\n            <div class="col-sm-3 order-2">\n              <jsontoexcel :data="td" class />\n            </div>\n            <div class="col-sm-3 order-3">\n              <div class="tips">\n                  <button type="button" @click="print2" class="btn btn-sm btn-outline-danger">\n                    <span class="typcn typcn-document-text"></span>\n                  </button>\n                  <span class="tipstextB">Print Laporan</span>\n              </div>\n            </div>\n            <div class="col-sm-4 order-1">\n              <select class="form-control" style="width:80px" v-model="selected">\n                <option>10</option>\n                <option>20</option>\n                <option>50</option>\n                <option>100</option>\n                <option>1000</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      \x3c!-- TABLE --\x3e\n      <div\n        class="table-responsive-sm font-times p-3"\n        style="box-shadow:1px 4px 6px black;overflow:scroll;"\n        v-dragscroll\n      >\n        <template>\n          \x3c!-- DEKSTOP --\x3e\n          <table\n            class="table-print table-sm table-bordered table-striped table-hover table-print border-black"\n            style=" overflow-x: scroll;\n    overflow-y: hidden;\n    height: 80px;\n    white-space:nowrap"\n          >\n            \x3c!-- TABLE STYLE --\x3e\n            <thead class="mdb-color" :style="{background:thbackground}">\n              <tr class="text-white" style="overflow:scroll;color:white;">\n                 <th class :style="{color:thcolor}">#</th>\n                 '.concat(this.checkWith?"<th class>NO</th>":"",'\n                <th\n                  scope="col"\n                  class="th-print cursor-pointer uppercase"\n                  @click="sort(item)"\n                  v-for="(item, index) in thnya"\n                  :key="index+\'th\'"\n                  v-show="!less.includes(item)"\n                  :order=\'index+1\'\n                >\n                  <span :style="{color:thcolor}" style=\'font-size:13px;\'>\n                    {{item}}\n                    <template v-if="orderWith">\n                      <span v-show="orderBy==item">\n                        <span class="typcn typcn-arrow-down"></span>\n                      </span>\n                    </template>\n                    <template v-else>\n                      <span v-show="orderBy==item">\n                        <span class="typcn typcn-arrow-up"></span>\n                      </span>\n                    </template>\n                  </span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for="(item, index3) in td" :key="index3+\'td\'">\n                 ').concat(this.checkWith?' <td >\n                  <input\n                    type="checkbox"\n                    :id="item.UrutID+index3+\'check\'"\n                    :value="item.UrutID"\n                    v-model="checkedItem"\n                  />\n                  <label :for="item.UrutID+index3+\'check\'">{{item.UrutID}}</label>\n                </td>':"",'\n                <td >{{(index3+temp1)+1}}</td>\n                <no-ssr>\n                  <v-touch\n                    tag="td"\n                    v-on:tap="ambil(item,index3);modal=true;aksi=\'update\'"\n                    class="cursor-pointer"\n                    \n                    v-for="(item2, indexs) in thnya"\n                    :key="indexs+\'th2\'"\n                    v-html="item[item2]"\n                    v-show="!less.includes(item2)"\n                  ></v-touch>\n                </no-ssr>\n              </tr>\n            </tbody>\n          </table>\n        </template>\n        \x3c!-- FUNGSI DIBAWAH TABEL SEPERTI PAGINATION --\x3e\n        <div class="float-right">\n          <template v-if="datanya.length>=selected">\n            <button\n              type="button"\n              @click="pagPrev"\n              class="btn btn-sm btn-outline-info roundec-circle"\n            >Prev</button>\n            &nbsp;\n            <button\n              type="button"\n              @click="pagNext"\n              class="btn btn-sm btn-info roundec-circle"\n            >Next</button>\n          </template>\n          <template v-else>\n            <button\n              type="button"\n              @click="pagPrev"\n              class="btn btn-sm btn-black roundec-circle"\n              disabled\n            >Prev</button>\n            &nbsp;\n            <button\n              type="button"\n              @click="pagNext"\n              class="btn btn-sm btn-black roundec-circle"\n              disabled\n            >Next</button>\n          </template>\n        </div>\n                 ').concat(this.checkWith?'  <button\n          type="button"\n          @click="checkedAll()"\n          class="btn btn-sm btn-primary"\n        >Delete Checked Item!</button>':"",'\n       \n      </div>\n    </div>\n    <div v-else>\n      <p class="text-center">Loading Table ...</p>\n    </div>\n  </div>\n</template>\n<script>\nvar id = require("date-fns/locale/id");\nimport upload from "@/components/Single/UploadsNo.vue";\nimport jsontoexcel from "@/components/backup/convert/JsonToExcel.vue";\nimport axios from "axios";\nimport socket from "@/plugins/socket.io.js";\nimport uniqid from "uniqid";\nexport default {\n  components: {\n    jsontoexcel,\n    upload\n  },\n   data() {\n    return {\n      // style\n      thbackground: "initial",\n      thcolor: "",\n      // Data datable\n      datanya: [],\n      vdata: {},\n      messages: [],\n      ready: false,\n      search: "",\n      pilih: { name: "taufik", hobby: "coding" },\n      thnya: {},\n      err: false,\n      checkedItem: [],\n      less: [, "_id"],\n      // modal\n      modal: false,\n      modalAction: "preview",\n      // pagination\n      selected: 10,\n      pagination: 1,\n      temp1: 0,\n      temp2: 10,\n      orderBy: "",\n      orderWith: true,\n      // media queries javascript\n      mdq: "xlg",\n      //kirim\n      kirim: {},\n      //form\n      aksi: "insert",\n      formOn: false,\n      updateOn: false\n    };\n  },\n  beforeMount() {\n    let that =this;\n    socket.on("new-message", message => {\n      this.messages.push(message);\n      console.log(message);\n      console.log("this.messages", this.messages);\n      this.$forceUpdate();\n      setTimeout(() => {\n        that.refreshData(this.messages);\n      }, 1000);\n    });\n    socket.on("edit-message", data => {\n      this.messages = data;\n      that.refreshData(data);\n      this.$forceUpdate();\n      setTimeout(() => {\n        that.refreshData(this.messages)\n      }, 1000)\n      // console.log(this.messages);\n    });\n    socket.on("refresh-message", data => {\n      socket.emit("last-messages", function(messages) {\n        that.messages = messages;\n        that.refreshData(messages);\n        this.$forceUpdate();\n      });\n    });\n  },\n  methods: {\n    '),k=k+d+'  </div>\n</template>\n<script>\nvar id = require("date-fns/locale/id");\nimport upload from "@/components/Single/UploadsNo.vue";\nimport axios from "axios";\nimport socket from "@/plugins/socket.io.js";\nimport uniqid from "uniqid";\nexport default {\n  components: {\n    upload\n  },\n   data() {\n    return {\n      datanya: [],\n      vdata: {},\n      messages: [],\n      ready: false,\n      search: "",\n      pilih: { name: "taufik", hobby: "coding" },\n      thnya: {},\n      err: false,\n      less: [, "_id"],\n      // media queries javascript\n      mdq: "xlg",\n      //kirim\n      kirim: {},\n      //form\n      aksi: "insert",\n      formOn: false,\n      updateOn: false\n    };\n  },\n  beforeMount() {\n    let that =this;\n    socket.on("new-message", message => {\n      this.messages.push(message);\n      console.log(message);\n      console.log("this.messages", this.messages);\n      this.$forceUpdate();\n    });\n    socket.on("edit-message", data => {\n      this.messages = data;\n      that.refreshData(data);\n      this.$forceUpdate();\n      // console.log(this.messages);\n    });\n    socket.on("refresh-message", data => {\n      socket.emit("last-messages", function(messages) {\n        that.messages = messages;\n        that.refreshData(messages);\n        this.$forceUpdate();\n      });\n    });\n  },\n  methods: {\n    dipilih(item) {\n      this.pilih = item;\n    },\n    insert() {\n      let message = {\n        id: uniqid(),\n        nama: this.vdata.nama,\n        room: "pesan",\n        tujuan: "admin",\n        text: this.vdata.text.trim(),\n        warning: "-",\n        picture: this.$store.state.users\n          ? this.$store.state.users.picture\n          : "./nofound.png",\n        dibaca: "false",\n        status: 1,\n        // 0 hapus, 1 pending, 2 diproses, 3 ada kesalahan, 4 selesai\n        createdAt: new Date().toJSON(),\n        createdBy: "null"\n      };\n     this.messages.push(message);\n        // this.$store.state.notifikasi.push(message)\n        this.message = "";\n        socket.emit("send-message", message);\n        this.$forceUpdate();\n    },\n    update(id) {\n      let keys = Object.keys(this.pilih);\n      keys.forEach(key => {\n        this.pilih[key] = this.vdata[key];\n      });\n      socket.emit("edits-message", this.pilih);\n    },\n    remove(id) {\n      let that = this;\n      socket.emit("delete-message", this.pilih);\n      socket.emit("last-messages", function(messages) {\n        that.messages = messages;\n        that.$forceUpdate();\n        that.pilih = {};\n      });\n    },\n      ambil(item, index) {\n      window.scrollTo(0, 0);\n      let that = this;\n      this.updateOn = true;\n      this.formOn = true;\n      let clone = this.$_.clone(item);\n      // clone["TGL_LHR"] = this.$datefns.format(\n      //   new Date(clone["TGL_LHR"]),\n      //   "YYYY-MM-dd"\n      // );\n      console.log(clone);\n      this.vdata = clone;\n      this.pilih = item;\n    },\n    checkedAll() {\n      console.log(this.checkedItem);\n    },\n     print1() {\n      this.$router.push(`/laporan/perdata?less='.concat(this.less.toString(),'`);\n      this.$store.state.print2=[]\n      this.$store.state.print2.push(this.pilih)\n      alert("print satu");\n    },\n    print2() {\n      this.$router.push(`/laporan/print?less=').concat(this.less.toString(),"`);\n      this.$store.state.print2 = this.td\n      alert(\"print banyak\");\n    },\n     linknya(hasil) {\n      console.log('link', hasil)\n      this.vdata.").concat(this.gambars,' = hasil\n      this.$forceUpdate()\n    },\n    go(hasil){\n      console.log(\'uploaded\')\n    },\n    clearInput() {\n      this.formOn = true;\n      let keys = Object.keys(this.vdata);\n      keys.forEach(key => {\n        this.vdata[key] = "";\n      });\n    },\n    isDate(value) {\n      var dateFormat;\n      if (toString.call(value) === "[object Date]") {\n        return true;\n      }\n      if (typeof value.replace === "function") {\n        value.replace(/^s+|s+$/gm, "");\n      }\n      dateFormat = /(^d{1,4}[.|\\/|-]d{1,2}[.|\\/|-]d{1,4})(s*(?:0?[1-9]:[0-5]|1(?=[012])d:[0-5])ds*[ap]m)?$/;\n      return dateFormat.test(value);\n    },\n    // MODAL\n    distance() {\n      return this.$datefns.distanceInWords(\n        new Date("2018-12-25T03:21:12.941Z"),\n        new Date(),\n        {\n          locale: id,\n          includeSeconds: true\n        }\n      );\n      return result;\n    },\n    format(date) {\n      return this.$datefns.format(date, "DD MMMM YYYY", {\n        locale: id\n      });\n    },\n    distanceToNow() {\n      return this.$datefns.distanceInWordsToNow(\n        new Date(2015, 0, 1, 0, 0, 15),\n        {\n          locale: id,\n          includeSeconds: true\n        }\n      );\n      //=> "3 days ago"\n    },\n    mediaQueries() {\n      this.mdq =\n        window.innerWidth <= 576\n          ? "sm"\n          : window.innerWidth <= 768\n          ? "md"\n          : window.innerWidth <= 992\n          ? "lg"\n          : "xl";\n    }\n  },\n  mounted() {\n    let that = this;\n   \n    that.mediaQueries();\n    this.$nextTick(() => {\n      window.addEventListener("resize", () => {\n        that.mediaQueries();\n      });\n    });\n    socket.emit("last-messages", function(messages) {\n      that.messages = messages;\n    });\n  }\n};<\/script>\n    ');var _='\n     dipilih(item) {\n      this.pilih = item;\n    },\n    insert() {\n      let message = {\n        id: uniqid(),\n        nama: this.vdata.nama,\n        room: "pesan",\n        tujuan: "admin",\n        text: this.vdata.text.trim(),\n        warning: "-",\n        picture: this.$store.state.users\n          ? this.$store.state.users.picture\n          : "./nofound.png",\n        dibaca: "false",\n        status: 1,\n        // 0 hapus, 1 pending, 2 diproses, 3 ada kesalahan, 4 selesai\n        createdAt: new Date().toJSON(),\n        createdBy: "null"\n      };\n      if (this.messages.length > 0) {\n        this.messages.push(message);\n        // this.$store.state.notifikasi.push(message)\n        this.message = "";\n        socket.emit("send-message", message);\n        this.$forceUpdate();\n      } else {\n        this.messages.push(message);\n        setTimeout(() => {\n          this.refreshData(this.messages);\n          console.log(this.messages);\n          // this.$store.state.notifikasi.push(message)\n          this.message = "";\n          socket.emit("send-message", message);\n          this.$forceUpdate();\n        }, 1000);\n      }\n    },\n    update(id) {\n      let keys = Object.keys(this.pilih);\n      keys.forEach(key => {\n        this.pilih[key] = this.vdata[key];\n      });\n      socket.emit("edits-message", this.pilih);\n    },\n    remove(id) {\n      let that = this;\n      socket.emit("delete-message", this.pilih);\n      socket.emit("last-messages", function(messages) {\n        that.messages = messages;\n        that.$forceUpdate();\n        setTimeout(() => {\n          that.refreshData(that.messages);\n        }, 1000);\n        that.pilih = {};\n      });\n    },\n      ambil(item, index) {\n      window.scrollTo(0, 0);\n      let that = this;\n      this.updateOn = true;\n      this.formOn = true;\n      let clone = this.$_.clone(item);\n      // clone["TGL_LHR"] = this.$datefns.format(\n      //   new Date(clone["TGL_LHR"]),\n      //   "YYYY-MM-dd"\n      // );\n      console.log(clone);\n      this.vdata = clone;\n      this.pilih = item;\n    },\n    checkedAll() {\n      console.log(this.checkedItem);\n    },\n     print1() {\n      this.$router.push(`/laporan/perdata?less='.concat(this.less.toString(),'`);\n      this.$store.state.print2=[]\n      this.$store.state.print2.push(this.pilih)\n      alert("print satu");\n    },\n    print2() {\n      this.$router.push(`/laporan/print?less=').concat(this.less.toString(),"`);\n      this.$store.state.print2 = this.td\n      alert(\"print banyak\");\n    },\n     linknya(hasil) {\n      console.log('link', hasil)\n      this.vdata.").concat(this.gambars,' = hasil\n      this.$forceUpdate()\n    },\n    go(hasil){\n      console.log(\'uploaded\')\n    },\n    clearInput() {\n      this.formOn = true;\n      let keys = Object.keys(this.vdata);\n      keys.forEach(key => {\n        this.vdata[key] = "";\n      });\n    },\n   refreshData(item) {\n      setTimeout(() => {\n        (function() {\n          var thElm;\n          var startOffset;\n          Array.prototype.forEach.call(\n            document.querySelectorAll("table th"),\n            function(th) {\n              th.style.position = "relative";\n              var grip = document.createElement("div");\n              grip.innerHTML = "&nbsp;";\n              grip.style.top = 0;\n              grip.style.right = 0;\n              grip.style.bottom = 0;\n              grip.style.width = "5px";\n              grip.style.position = "absolute";\n              grip.style.cursor = "col-resize";\n              grip.addEventListener("mousedown", function(e) {\n                thElm = th;\n                startOffset = th.offsetWidth - e.pageX;\n              });\n              th.appendChild(grip);\n            }\n          );\n          document.addEventListener("mousemove", function(e) {\n            if (thElm) {\n              thElm.style.width = startOffset + e.pageX + "px";\n            }\n          });\n          document.addEventListener("mouseup", function() {\n            thElm = undefined;\n          });\n        })();\n        this.datanya = item;\n        let keys = Object.keys(item[0]);\n        keys = this.$_.difference(keys, this.unless);\n        this.thnya = keys;\n      }, 1000);\n    },\n    edits() {\n      let that = this;\n      setTimeout(() => {\n        that.$nuxt.$emit("editTable1", obj);\n      }, 1000);\n    },\n    modalKey(e) {\n      if (e.key == "Escape") {\n        this.modal = false;\n      }\n    },\n    isDate(value) {\n      var dateFormat;\n      if (toString.call(value) === "[object Date]") {\n        return true;\n      }\n      if (typeof value.replace === "function") {\n        value.replace(/^s+|s+$/gm, "");\n      }\n      dateFormat = /(^d{1,4}[.|\\/|-]d{1,2}[.|\\/|-]d{1,4})(s*(?:0?[1-9]:[0-5]|1(?=[012])d:[0-5])ds*[ap]m)?$/;\n      return dateFormat.test(value);\n    },\n    // MODAL\n    distance() {\n      return this.$datefns.distanceInWords(\n        new Date("2018-12-25T03:21:12.941Z"),\n        new Date(),\n        {\n          locale: id,\n          includeSeconds: true\n        }\n      );\n      return result;\n    },\n    format(date) {\n      return this.$datefns.format(date, "DD MMMM YYYY", {\n        locale: id\n      });\n    },\n    distanceToNow() {\n      return this.$datefns.distanceInWordsToNow(\n        new Date(2015, 0, 1, 0, 0, 15),\n        {\n          locale: id,\n          includeSeconds: true\n        }\n      );\n      //=> "3 days ago"\n    },\n    // DATATABLE\n    pagPrev() {\n      this.pagination = this.pagination - 1;\n      if (this.pagination == 0) {\n        this.pagination = 1;\n      }\n      this.temp2 = this.pagination * this.selected;\n      this.temp1 = Math.ceil(this.temp2) - this.selected;\n    },\n    pagNext() {\n      this.pagination = this.pagination + 1;\n      if (this.pagination > this.bagi) {\n        this.pagination = Math.round(this.bagi);\n      }\n      this.temp2 = this.pagination * this.selected;\n      this.temp1 = Math.ceil(this.temp2) - this.selected;\n    },\n    sort(item) {\n      this.orderBy = item;\n      this.orderWith = !this.orderWith;\n    },\n    mediaQueries() {\n      this.mdq =\n        window.innerWidth <= 576\n          ? "sm"\n          : window.innerWidth <= 768\n          ? "md"\n          : window.innerWidth <= 992\n          ? "lg"\n          : "xl";\n    }\n  },props: {\n    unless: {\n      type: Array,\n      required: false,\n      default: () => ["gone"]\n    },\n    unlessForm: {\n      type: Array,\n      required: false,\n      default: () => ["gone"]\n    },\n    date: {\n      type: Array,\n      required: false,\n      default: () => ["ditanyakan"]\n    }\n  },\n  watch: {\n    modal() {\n      if (this.modal) {\n        document.addEventListener("keydown", this.modalKey);\n      } else {\n        document.removeEventListener("keydown", this.modalKey);\n        document.removeEventListener("keydown", this.modalKey);\n        document.removeEventListener("keydown", this.modalKey);\n      }\n    },\n    datanya() {\n      if (this.datanya.length > 0) {\n        this.ready = true;\n      }\n    },\n    selected() {\n      this.temp2 = this.pagination * this.selected;\n      this.temp1 = this.temp2 - this.selected;\n    },\n    search() {\n      this.pagination = 1;\n      this.temp2 = this.pagination * this.selected;\n      this.temp1 = this.temp2 - this.selected;\n    }\n  }, computed: {\n    // MODAL\n    pilihForm() {\n      let data = this.pilih;\n      let keys = Object.keys(data);\n      this.unlessForm.forEach(les => {\n        delete data[les];\n      });\n      return data;\n    },\n    // DATATABLE\n    bagi() {\n      let data = this.datanya;\n      data = data.length / 10;\n      console.log(data);\n      return data;\n    },\n    th() {\n      let data = this.datanya;\n      let keys = Object.keys(data[0]);\n      keys = this.$_.difference(keys, this.unless);\n      return keys;\n    },\n    td() {\n      let that = this;\n      let data = this.datanya;\n      //! order fungsi\n      if (this.orderBy.length > 0) {\n        let ordernya = this.orderWith ? "asc" : "desc";\n        data = this.$_.orderBy(data, [this.orderBy], [ordernya]);\n      }\n      //! search fungsi\n      let keys = this.thnya;\n      data = data.filter((v, i, a) => {\n        let hasil = false;\n        keys.filter(key => {\n          if (typeof v[key] == "string") {\n            if (v[key].toLowerCase().indexOf(this.search.toLowerCase()) != -1) {\n              hasil = true;\n            }\n          } else {\n            if (v[key] != null) {\n              if (v[key].toString().indexOf(this.search) != -1) {\n                hasil = true;\n              }\n            } else {\n            }\n          }\n        });\n        if (hasil) return v;\n      });\n      data = data.map(e => {\n        let obj = {};\n        let kunci = Object.keys(e);\n        kunci = that.$_.difference(kunci, that.unless);\n        kunci.forEach((a, index) => {\n          if (kunci.find(e => e == that.date[index])) {\n          } else {\n            // obj[a] = \'tanggal\'\n          }\n\n          obj[a] = e[a];\n          // typeof e[a] != "string"\n          //   ? e[a]\n          //   : new Date(e[a]) !== "Invalid Date" && !isNaN(new Date(e[a]))\n          //   ? that.isDate(e[a])\n          //     ? that.format(e[a])\n          //     : e[a]\n          //   : e[a];\n        });\n        return obj;\n      });\n      data = data.slice(this.temp1, this.temp2);\n      return data;\n    }\n  },\n  mounted() {\n    let that = this;\n   \n    that.mediaQueries();\n    this.$nextTick(() => {\n      window.addEventListener("resize", () => {\n        that.mediaQueries();\n      });\n    });\n    socket.emit("last-messages", function(messages) {\n      that.messages = messages;\n      if (messages.length > 0) {\n        that.refreshData(messages);\n      }\n    });\n  }\n};<\/script><style scoped>\n@header_background_color: #333;\n@header_text_color: #FDFDFD;\n@alternate_row_background_color: #DDD;\n\n@table_width: 750px;\n@table_body_height: 300px;\n@column_one_width: 200px;\n@column_two_width: 200px;\n@column_three_width: 350px;\n\n.fixed_headers {\n  width: @table_width;\n  table-layout: fixed;\n  border-collapse: collapse;\n\n  th {\n    text-decoration: underline;\n  }\n  th,\n  td {\n    padding: 5px;\n    text-align: left;\n  }\n\n  td:nth-child(1),\n  th:nth-child(1) {\n    min-width: @column_one_width;\n  }\n  td:nth-child(2),\n  th:nth-child(2) {\n    min-width: @column_two_width;\n  }\n  td:nth-child(3),\n  th:nth-child(3) {\n    width: @column_three_width;\n  }\n\n  thead {\n    background-color: @header_background_color;\n    color: @header_text_color;\n    tr {\n      display: block;\n      position: relative;\n    }\n  }\n  tbody {\n    display: block;\n    overflow: auto;\n    width: 100%;\n    height: @table_body_height;\n    tr:nth-child(even) {\n      background-color: @alternate_row_background_color;\n    }\n  }\n}\n\n.old_ie_wrapper {\n  height: @table_body_height;\n  width: @table_width;\n  overflow-x: hidden;\n  overflow-y: auto;\n  tbody {\n    height: auto;\n  }\n}\n.cl {\n  color: rgba(46, 44, 44, 0.404);\n}\n</style>');this.sockets="//=======================\n//! SOCKET IO BEGIN\n//=======================\n\n// Add socket.io events\nlet messages = []\nio.on('connection', socket => {\n  socket.on('event', function(fn) {\n    console.log(fn)\n  })\n  socket.on('last-messages', function(fn) {\n    fn(messages.slice(-50))\n  })\n  socket.on('send-message', function(message) {\n    console.log('terkirim', message)\n    messages.push(message)\n    socket.broadcast.emit('new-message', message)\n  })\n  socket.on('edits-message', function(datas) {\n    console.log('edit', datas)\n    let no = messages.findIndex(pil => {\n      if (pil.id == datas['id']) {\n        return this\n      }\n    })\n    messages[no] = datas\n    socket.broadcast.emit('edit-message', messages)\n    // console.log(messages[no])\n  })\n  socket.on('delete-message', function(datas) {\n    console.log('delete', datas)\n    let no = messages.findIndex(pil => {\n      if (pil.id == datas['id']) {\n        return this\n      }\n    })\n    messages.splice(no, 1)\n    socket.broadcast.emit('edit-message', messages)\n    // console.log(messages[no])\n  })\n\n  socket.on('last-jarak', function(fn) {\n    fn(jaraks)\n  })\n  socket.on('send-jarak', function(jarak) {\n    jaraks = jarak\n    socket.broadcast.emit('new-jarak', jarak)\n  })\n  socket.on('last-infra', function(fn) {\n    fn(infras)\n  })\n  socket.on('send-infra', function(infra) {\n    infras = infra\n    socket.broadcast.emit('new-infra', infra)\n  })\n})",v+=_,this.kalimat=d,this.kalimat2=v,this.kalimat4=k;var w='\n      <template>\n  <div style="font-family:times new roman;">\n    <div class="no-print bg-black" style="color:White;">\n      <hr />\n      <div class="container-fluid">\n        <div class="row">\n          <div class="col-sm-6">\n            <button\n              type="button"\n              @click="back()"\n              class="btn btn-sm btn-outline-danger no-print"\n            >Go Back!</button>\n            <br />\n            <br />\n            <button type="button" @click="print()" class="btn btn-sm btn-primary">Print</button>\n          </div>\n          <div class="col-sm-6">\n            <br />Mengetahui Perangkat Desa :\n            <tr>\n              <td>Perangkat ID</td>\n              <td>&nbsp;:&nbsp;</td>\n              <td>\n                <div class="sm-form">\n                  <select class="form-control" @change="ganti($event.target.value)">\n                    <option\n                      :value="JSON.stringify({Nama:\'......................\',Jabatan:\'Kepala Desa\'})"\n                    >-</option>\n                    <option\n                      v-for="(item, index) in listnya"\n                      :key="index+\'perangkat\'"\n                      :value="JSON.stringify(item)"\n                    >{{item.Nama}}</option>\n                  </select>\n                </div>\n              </td>\n            </tr>\n          </div>\n        </div>\n      </div>\n      <hr class="style13" />\n    </div>\n    \x3c!--  --\x3e\n    \x3c!-- DIMULAI DARI SINI PRINT PAGE --\x3e\n    \x3c!--  --\x3e\n    <div style>\n      <img\n        src="@/static/photo/hulu sungai.png"\n        class="kinoLightBox img-fluid rounded-top z-depth-2"\n        style="height:100px;margin-left:10px;position:absolute;left:20px;"\n        alt="no found"\n      />\n      <p class="pl-3 text-center" style="font-size:25px;line-height:1.0;line-spacing:3px;">\n        PEMERINTAH KABUPATEN HULU SUNGAI SELATAN\n        <br />KECAMATAN ANGKINANG\n        <br />DESA BAMBAN\n        <br />\n      </p>\n      <p\n        class="pl-3 text-center"\n        style="font-size:18px;"\n      >Jl. A. Yani Km 11.2 Desa Bamban Kec. Angkinang Kab. HSS Kode Pos 71291</p>\n      <img src="@/static/photo/line.jpg" class="img-fluid" style="width:100%;height:20px;" />\n      <p\n        class="text-center underline"\n        style="font-size:21px;font-weight:bold;"\n      >LAPORAN SURAT KETERANGAN '.concat(this.vdata.table,'</p>\n      <br />\n      <p>Laporan Tanggal : {{format(new Date())}}</p>\n      <p>Jumlah Data : {{$store.state.print2.length}}</p>\n      <br />\n      \x3c!--  --\x3e\n      \x3c!-- TABLE --\x3e\n      \x3c!--  --\x3e\n      <div class="table-responsive-sm" style="width:100%;">\n        <table border="1" style="border:1px solid black;widht:100%;margin:1em auto;">\n          \x3c!--Table head--\x3e\n          <thead class="mdb-color bg-white">\n            <tr style="color:black;">\n              <th class="uppercase" style="font-size:11px;padding:2px;border:1px solid;">NO</th>\n              <th\n                class="uppercase"\n                style="font-size:11px;padding:2px;border:1px solid;"\n                v-for="(item, index) in key"\n                :key="index+\'key\'"\n                v-show="!less.includes(item)"\n              >{{item}}</th>\n            </tr>\n          </thead>\n          \x3c!--Table head--\x3e\n          \x3c!--Table body--\x3e\n          <tbody>\n            <tr\n              style="font-size:12px;"\n              v-for="(tr, index) in $store.state.print2"\n              :key="index+\'print\'"\n            >\n              <td style="font-size:12px;border:1px solid;padding:2px;">{{index+1}}</td>\n              <td\n                style="font-size:12px;border:1px solid;padding:2px;"\n                v-for="(td,keys, index) in tr"\n                :key="index"\n                v-show="!less.includes(keys)"\n              >{{td}}</td>\n            </tr>\n          </tbody>\n          \x3c!--Table body--\x3e\n        </table>\n        \x3c!--Table--\x3e\n      </div>\n      \x3c!-- TABLE END --\x3e\n      \x3c!-- TABLE END --\x3e\n      \x3c!-- TABLE END --\x3e\n      <br />\n      <br />\n      \x3c!-- TTD --\x3e\n      \x3c!-- TTD --\x3e\n      \x3c!-- TTD --\x3e\n      <div class="float-right" style="padding-right:70px;font-size:19px;">\n        <p>Bamban, {{format(new Date())}}</p>\n        <p>{{ttd.Jabatan}}</p>\n        <br />\n        <br />\n        <p class="underline font-bold" style="font-size:19px;">{{ttd.Nama}}</p>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nvar id = require("date-fns/locale/id");\nexport default {\n  layout: "print",\n  data() {\n    return {\n      less: ["UrutID","Gambar",\'_id\'],\n      thnya: [],\n      records: "",\n      key: [],\n      listnya: [\n        { Nama: "Taufik", Jabatan: "Programmer" },\n        { Nama: "Akbar", Jabatan: "Desainer" },\n        { Nama: "Maliki", Jabatan: "Web Master" },\n        { Nama: "Kino", Jabatan: "Traveller" }\n      ],\n      ttd: {\n        Nama: ".................................",\n        Jabatan: "Kepala"\n      }\n    };\n  },\n  methods: {\n    getKeys() {\n      let data = this.$store.state.print2[0];\n      data = Object.keys(data);\n      this.key = data;\n    },\n    ganti(e) {\n      console.log(e);\n      this.ttd.Nama = JSON.parse(e).Nama;\n      this.ttd.Jabatan = JSON.parse(e).Jabatan;\n      this.$forceUpdate();\n    },\n    print() {\n      window.print();\n    },\n    back() {\n      this.$router.go(-1);\n    },\n    format(date) {\n      return this.$datefns.format(date, "DD MMMM YYYY", {\n        locale: id\n      });\n    }\n  },\n  mounted() {\n   \n    setTimeout(() => {\n      this.getKeys();\n    }, 500);\n  }\n};\n<\/script>\n<style scoped>\n.setting {\n  padding: 10px;\n  line-heigth: 1.5;\n}\ntd {\n  font-size: 19px;\n  line-heigth: 1.5;\n}\n@page {\n  size: auto; /* auto is the initial value */\n\n  /* this affects the margin in the printer settings */\n  margin: 2cm 2cm 3cm 3cm;\n}\n\nbody {\n  /* this affects the margin on the content before sending to printer */\n  margin: 2cm 2cm 3cm 3cm;\n  margin: 0px;\n}\n</style>');this.kalimat3=w}}},l=o,r=e("2877"),c=e("beb0"),d=e.n(c),h=e("291e"),p=e.n(h),m=Object(r["a"])(l,a,s,!1,null,null,null);"function"===typeof d.a&&d()(m),"function"===typeof p.a&&p()(m);n["default"]=m.exports},d2c8:function(t,n,e){var a=e("aae3"),s=e("be13");t.exports=function(t,n,e){if(a(n))throw TypeError("String#"+e+" doesn't accept regex!");return String(s(t))}}}]);
//# sourceMappingURL=page-testing-auto4.28adf230.js.map